def alphabeta(node, depth, alpha, beta, maximizingPlayer):
    if depth == 0 or isinstance(node, int):return node
    if maximizingPlayer:
        maxEval = float('-inf')
        for child in node:
            eval = alphabeta(child, depth-1, alpha, beta, False)
            maxEval = max(maxEval, eval)
            alpha = max(alpha, eval)
            if beta <= alpha:break
        return maxEval
    else:
        minEval = float('inf')
        for child in node:
            eval = alphabeta(child, depth-1, alpha, beta, True)
            minEval = min(minEval, eval)
            beta = min(beta, eval)
            if beta <= alpha:break
        return minEval

tree=[[3,5],[6,[9,1]],[0,[7,4]]]
value = alphabeta(tree,3,float('-inf'),float('inf'),True)
print(value)
